import os
import gzip
from io import BytesIO

def generate_const(input_file):
    # get the filename
    filename = os.path.basename(input_file).replace(".", "_")

    with open(input_file, 'rb') as fin:
        raw_bytes = fin.read()

    zipped = BytesIO()
    with gzip.GzipFile(fileobj=zipped, mode="w") as zout:
        zout.write(raw_bytes)

    zip_bytes = zipped.getvalue()

    print("[%s] %d raw == %d gzipped" % (input_file, len(raw_bytes), len(zip_bytes)))

    output_const = '#define %s_len %d\n' % (filename, len(zip_bytes))
    output_const += 'const uint8_t %s[] PROGMEM = {' % filename
    for b in zip_bytes:
        output_const += '0x%02X,' % b
    output_const += "};\n\n"
    return output_const

# open our assets file
with open("src/assets.h", "w") as f:
    f.write("// generated by shared/generate_assets.py, do not edit!")
    f.write("#pragma once\n\n")

    # walk the files in our assets directory
    for fn in os.listdir("bin/assets"):
        f.write(generate_const(os.path.join("bin", "assets", fn)))
